 <ScrollView style={styles.resultsContainer}>

        {loading && <ActivityIndicator style={{zIndex:99}} size={25} color={'white'}/>}
{resultsloaded?(<View style={{flexDirection:'row'}} >
<Image resizeMode="contain" 
  source={require('./assets/images/answer.png')} />

  <Text style={{color:'white',fontWeight:'bold',
  fontSize:25}} >Answer</Text>   
</View>
):(<></>) }

        {results ? (
         <WebView
      source={{ html: results }}
      style={{ flex: 1 }}
    />
        ) : (
          <Text>No results found</Text>
        )}



<View
  style={{
    borderBottomColor: 'white',
    borderBottomWidth: StyleSheet.hairlineWidth,
    marginTop:10,
    marginBottom:10,
  }}
/>

{resultsloaded?(<View style={{flexDirection:'row'}} >
<Image resizeMode="contain" 
  source={require('./assets/images/sources.png')} />

  <Text style={{color:'white',fontWeight:'bold',
  fontSize:25}} >Sources</Text>
</View>
):(<></>)}
      <View>
         {results2.map((item, index) => { return (
          <View key={index} style={styles.itemContainer}>
  
     
         <Text style={styles.itemName}>{item.name}</Text>
     
  <View style={{width:'100%',flexDirection:'row',display:'flex',justifyContent:'space-between',alignItems:'space-evenly'}} >
            <Text style={{color: '#7e7979',fontSize:16,fontFamily:'Quicksand-Regular',
alignSelf:'flex-start'}} onPress={() => Linking.openURL(item.url)}>
              {(index+1) +' - '+ new URL(item.url).hostname}
            </Text>
            <Image resizeMode="contain" style={{display:'flex',alignSelf:'flex-end',width:20,height:20}} 
  source={{ uri: 'https://www.google.com/s2/favicons?domain='+item.url}} />
</View>
  <Text style={styles.itemSnippet}>{item.snippet.substring(0,100)}</Text>
          </View>
        )})}
      </View>

      <View style={{marginTop:20}} >


    
{resultsloaded? (<View style={{flexDirection:'row'}} >
<Image resizeMode="contain"
  source={require('./assets/images/related.png')} />
 
  <Text style={{color:'white',fontWeight:'bold',
  fontSize:25}} >Related</Text>   
</View>
):(<></>)}


         {relatedQuestions.map((item, index) => { 
          return (
<View  key={index}> 
          <View  style={styles.itemContainer}>
            <Text style={styles.itemName}>{item.question}</Text>
            
          </View>
          <View
  style={{
    borderBottomColor: 'white',
    borderBottomWidth: StyleSheet.hairlineWidth,
  }}
/></View>
        )})}

      </View>




      </ScrollView>